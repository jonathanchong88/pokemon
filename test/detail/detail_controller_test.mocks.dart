// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_app_pokemon/test/detail/detail_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:ui' as _i7;

import 'package:flutter_app_pokemon/configs/config.dart' as _i3;
import 'package:flutter_app_pokemon/data/data.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

import 'detail_controller_test.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePokemonAbilities_0 extends _i1.Fake implements _i2.PokemonAbilities {
}

class _FakePokemon_1 extends _i1.Fake implements _i2.Pokemon {}

class _FakeIPokemonRepository_2 extends _i1.Fake
    implements _i2.IPokemonRepository {}

class _FakeInternalFinalCallback_3<T> extends _i1.Fake
    implements _i3.InternalFinalCallback<T> {}

/// A class which mocks [DetailControllerTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailControllerTest extends _i1.Mock
    implements _i4.DetailControllerTest {
  MockDetailControllerTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PokemonAbilities get pokemonAbilities =>
      (super.noSuchMethod(Invocation.getter(#pokemonAbilities),
          returnValue: _FakePokemonAbilities_0()) as _i2.PokemonAbilities);
  @override
  set pokemonAbilities(_i2.PokemonAbilities? _pokemonAbilities) => super
      .noSuchMethod(Invocation.setter(#pokemonAbilities, _pokemonAbilities),
          returnValueForMissingStub: null);
  @override
  _i2.Pokemon get pokemon => (super.noSuchMethod(Invocation.getter(#pokemon),
      returnValue: _FakePokemon_1()) as _i2.Pokemon);
  @override
  set pokemon(_i2.Pokemon? _pokemon) =>
      super.noSuchMethod(Invocation.setter(#pokemon, _pokemon),
          returnValueForMissingStub: null);
  @override
  _i2.IPokemonRepository get iPokemonRepository =>
      (super.noSuchMethod(Invocation.getter(#iPokemonRepository),
          returnValue: _FakeIPokemonRepository_2()) as _i2.IPokemonRepository);
  @override
  bool get isFavouriteChange =>
      (super.noSuchMethod(Invocation.getter(#isFavouriteChange),
          returnValue: false) as bool);
  @override
  set isFavouriteChange(bool? _isFavouriteChange) => super.noSuchMethod(
      Invocation.setter(#isFavouriteChange, _isFavouriteChange),
      returnValueForMissingStub: null);
  @override
  _i3.ViewState get sessionState =>
      (super.noSuchMethod(Invocation.getter(#sessionState),
          returnValue: _i3.ViewState.idle) as _i3.ViewState);
  @override
  _i3.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback_3<void>())
          as _i3.InternalFinalCallback<void>);
  @override
  _i3.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback_3<void>())
          as _i3.InternalFinalCallback<void>);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  int get listeners =>
      (super.noSuchMethod(Invocation.getter(#listeners), returnValue: 0)
          as int);
  @override
  _i5.Future<dynamic> getPokemonDetailRequest() =>
      (super.noSuchMethod(Invocation.method(#getPokemonDetailRequest, []),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> updatePokemonFavourite() =>
      (super.noSuchMethod(Invocation.method(#updatePokemonFavourite, []),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  void update([List<Object>? ids, bool? condition = true]) =>
      super.noSuchMethod(Invocation.method(#update, [ids, condition]),
          returnValueForMissingStub: null);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
  @override
  _i6.Disposer addListener(_i6.GetStateUpdate? listener) =>
      (super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValue: () {}) as _i6.Disposer);
  @override
  void removeListener(_i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void refresh() => super.noSuchMethod(Invocation.method(#refresh, []),
      returnValueForMissingStub: null);
  @override
  void refreshGroup(Object? id) =>
      super.noSuchMethod(Invocation.method(#refreshGroup, [id]),
          returnValueForMissingStub: null);
  @override
  void notifyChildrens() =>
      super.noSuchMethod(Invocation.method(#notifyChildrens, []),
          returnValueForMissingStub: null);
  @override
  void removeListenerId(Object? id, _i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListenerId, [id, listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  _i6.Disposer addListenerId(Object? key, _i6.GetStateUpdate? listener) =>
      (super.noSuchMethod(Invocation.method(#addListenerId, [key, listener]),
          returnValue: () {}) as _i6.Disposer);
  @override
  void disposeId(Object? id) =>
      super.noSuchMethod(Invocation.method(#disposeId, [id]),
          returnValueForMissingStub: null);
}
