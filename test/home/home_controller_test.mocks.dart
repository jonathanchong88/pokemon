// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_app_pokemon/test/home/home_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:ui' as _i9;

import 'package:flutter/material.dart' as _i3;
import 'package:flutter_app_pokemon/configs/config.dart' as _i5;
import 'package:flutter_app_pokemon/data/data.dart' as _i4;
import 'package:flutter_app_pokemon/data/models/pokemon/pokemon.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

import 'home_controller_test.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePokemonsEntity_0 extends _i1.Fake implements _i2.PokemonsEntity {}

class _FakeScrollController_1 extends _i1.Fake implements _i3.ScrollController {
}

class _FakeIPokemonRepository_2 extends _i1.Fake
    implements _i4.IPokemonRepository {}

class _FakeInternalFinalCallback_3<T> extends _i1.Fake
    implements _i5.InternalFinalCallback<T> {}

/// A class which mocks [HomeControllerTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeControllerTest extends _i1.Mock
    implements _i6.HomeControllerTest {
  MockHomeControllerTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.ViewType get viewState =>
      (super.noSuchMethod(Invocation.getter(#viewState),
          returnValue: _i5.ViewType.all) as _i5.ViewType);
  @override
  set viewState(_i5.ViewType? _viewState) =>
      super.noSuchMethod(Invocation.setter(#viewState, _viewState),
          returnValueForMissingStub: null);
  @override
  List<_i2.Pokemon> get pokemonList =>
      (super.noSuchMethod(Invocation.getter(#pokemonList),
          returnValue: <_i2.Pokemon>[]) as List<_i2.Pokemon>);
  @override
  set pokemonList(List<_i2.Pokemon>? _pokemonList) =>
      super.noSuchMethod(Invocation.setter(#pokemonList, _pokemonList),
          returnValueForMissingStub: null);
  @override
  _i2.PokemonsEntity get pokemonEntity =>
      (super.noSuchMethod(Invocation.getter(#pokemonEntity),
          returnValue: _FakePokemonsEntity_0()) as _i2.PokemonsEntity);
  @override
  set pokemonEntity(_i2.PokemonsEntity? _pokemonEntity) =>
      super.noSuchMethod(Invocation.setter(#pokemonEntity, _pokemonEntity),
          returnValueForMissingStub: null);
  @override
  bool get hasReachedMax =>
      (super.noSuchMethod(Invocation.getter(#hasReachedMax), returnValue: false)
          as bool);
  @override
  set hasReachedMax(bool? _hasReachedMax) =>
      super.noSuchMethod(Invocation.setter(#hasReachedMax, _hasReachedMax),
          returnValueForMissingStub: null);
  @override
  bool get isAscendingOrder =>
      (super.noSuchMethod(Invocation.getter(#isAscendingOrder),
          returnValue: false) as bool);
  @override
  set isAscendingOrder(bool? _isAscendingOrder) => super.noSuchMethod(
      Invocation.setter(#isAscendingOrder, _isAscendingOrder),
      returnValueForMissingStub: null);
  @override
  _i3.ScrollController get scrollController =>
      (super.noSuchMethod(Invocation.getter(#scrollController),
          returnValue: _FakeScrollController_1()) as _i3.ScrollController);
  @override
  _i4.IPokemonRepository get iPokemonRepository =>
      (super.noSuchMethod(Invocation.getter(#iPokemonRepository),
          returnValue: _FakeIPokemonRepository_2()) as _i4.IPokemonRepository);
  @override
  _i5.ViewState get sessionState =>
      (super.noSuchMethod(Invocation.getter(#sessionState),
          returnValue: _i5.ViewState.idle) as _i5.ViewState);
  @override
  _i5.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback_3<void>())
          as _i5.InternalFinalCallback<void>);
  @override
  _i5.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback_3<void>())
          as _i5.InternalFinalCallback<void>);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  int get listeners =>
      (super.noSuchMethod(Invocation.getter(#listeners), returnValue: 0)
          as int);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  _i7.Future<dynamic> pokemonRequest(String? url) =>
      (super.noSuchMethod(Invocation.method(#pokemonRequest, [url]),
          returnValue: Future<dynamic>.value()) as _i7.Future<dynamic>);
  @override
  _i7.Future<dynamic> favouritePokemonRequest() =>
      (super.noSuchMethod(Invocation.method(#favouritePokemonRequest, []),
          returnValue: Future<dynamic>.value()) as _i7.Future<dynamic>);
  @override
  _i7.Future<dynamic> updatePokemonFavourite(int? index) =>
      (super.noSuchMethod(Invocation.method(#updatePokemonFavourite, [index]),
          returnValue: Future<dynamic>.value()) as _i7.Future<dynamic>);
  @override
  dynamic changeItemInOrder(bool? isAscending) =>
      super.noSuchMethod(Invocation.method(#changeItemInOrder, [isAscending]));
  @override
  _i7.Future<void> onRefresh() =>
      (super.noSuchMethod(Invocation.method(#onRefresh, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  void update([List<Object>? ids, bool? condition = true]) =>
      super.noSuchMethod(Invocation.method(#update, [ids, condition]),
          returnValueForMissingStub: null);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
  @override
  _i8.Disposer addListener(_i8.GetStateUpdate? listener) =>
      (super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValue: () {}) as _i8.Disposer);
  @override
  void removeListener(_i9.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void refresh() => super.noSuchMethod(Invocation.method(#refresh, []),
      returnValueForMissingStub: null);
  @override
  void refreshGroup(Object? id) =>
      super.noSuchMethod(Invocation.method(#refreshGroup, [id]),
          returnValueForMissingStub: null);
  @override
  void notifyChildrens() =>
      super.noSuchMethod(Invocation.method(#notifyChildrens, []),
          returnValueForMissingStub: null);
  @override
  void removeListenerId(Object? id, _i9.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListenerId, [id, listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  _i8.Disposer addListenerId(Object? key, _i8.GetStateUpdate? listener) =>
      (super.noSuchMethod(Invocation.method(#addListenerId, [key, listener]),
          returnValue: () {}) as _i8.Disposer);
  @override
  void disposeId(Object? id) =>
      super.noSuchMethod(Invocation.method(#disposeId, [id]),
          returnValueForMissingStub: null);
}
